From 867ad5d5d64b9b27ee32148027532db0a00f6433 Mon Sep 17 00:00:00 2001
From: "Roy.Li" <rongqing.li@windriver.com>
Date: Thu, 7 Jan 2016 17:33:26 +0000
Subject: [PATCH 02/32] Add knob to control whether numa support should be
 checked

otherwise undeterministic dependency will be generated
during build depending upong numa being staged or not

Signed-off-by: Roy.Li <rongqing.li@windriver.com>
Signed-off-by: Khem Raj <raj.khem@gmail.com>
Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
Upstream-Status: Pending
---
 m4/ltp-numa.m4 | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/m4/ltp-numa.m4 b/m4/ltp-numa.m4
index fc3383e..44cb559 100644
--- a/m4/ltp-numa.m4
+++ b/m4/ltp-numa.m4
@@ -24,7 +24,13 @@ dnl LTP_CHECK_SYSCALL_NUMA
 dnl ----------------------------
 dnl
 AC_DEFUN([LTP_CHECK_SYSCALL_NUMA], [
-	AC_CHECK_LIB(numa, numa_available, [have_libnuma=yes])
+	AC_MSG_CHECKING([for numa])
+	AC_ARG_WITH(
+		[numa],
+		AC_HELP_STRING([--without-numa],
+		[without numa support]),
+		[],
+	[AC_CHECK_LIB(numa, numa_available, [have_libnuma=yes])
 	AC_CHECK_HEADERS([numa.h numaif.h], [], [have_numa_headers=no])
 
 	if test "x$have_numa_headers" != "xno"; then
@@ -42,3 +48,5 @@ exit(1);
 		AC_DEFINE(HAVE_NUMA_V2, 1, [Define to 1 if you have libnuma and it's headers version >= 2 installed.])
 	fi
 ])
+AC_MSG_RESULT([$with_numa])
+])
-- 
2.7.0

